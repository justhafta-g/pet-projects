---
- hosts: local
  connection: local
  gather_facts: False
  vars:
    instance_type: t2.micro
    security_group: env_sg
    image: ami-0b418580298265d5c
    keypair: eu-central-1
    region: eu-central-1
    count: 1
    name: "DevTools"
  vars_files:
    - aws_keys.yml
  tasks:
    - name: Create a security group
      ec2_group:
        name: "{{ security_group }}"
        description: The dev tools security group
        region: "{{ region }}"
        aws_access_key: "{{ aws_access_key }}"
        aws_secret_key: "{{ aws_secret_key }}"
        rules:
          - proto: tcp
            from_port: 22
            to_port: 22
            cidr_ip: 0.0.0.0/0
          - proto: tcp
            from_port: 80
            to_port: 80
            cidr_ip: 0.0.0.0/0
          - proto: tcp
            from_port: 443
            to_port: 443
            cidr_ip: 0.0.0.0/0
        rules_egress:
          - proto: all
            cidr_ip: 0.0.0.0/0
    - name: Launch the new EC2 Instance
      ec2:
          aws_access_key: "{{ aws_access_key }}"
          aws_secret_key: "{{ aws_secret_key }}"
          group: "{{ security_group }}"
          instance_type: "{{ instance_type }}"
          image: "{{ image }}"
          wait: true
          region: "{{ region }}"
          keypair: "{{ keypair }}"
          count: "{{count}}"
          name: "{{name}}"
      register: ec2
    - name: Add the newly created host so that we can further contact it
      add_host:
          name: "{{ item.public_ip }}"
          groups: devtools
      with_items: "{{ ec2.instances }}"
    - name: Add tag to Instance(s)
      ec2_tag:
        aws_access_key: "{{ aws_access_key }}"
        aws_secret_key: "{{ aws_secret_key }}"
        resource: "{{ item.id }}"
        region: "{{ region }}"
        state: "present"
      with_items: "{{ ec2.instances }}"
      args:
        tags:
          Type: devtools
    - name: Wait for SSH to come up
      wait_for: timeout=1
        host: "{{ item.public_ip }}"
        port: 22
        state: started
      with_items: "{{ ec2.instances }}"
